# Data simulation for genome dating

## Tree topology 

### use 

library(phangorn)

trees_topo <- read.tree('simtree1.tre')

for(i in 1:length(trees_topo)){
  trees_topo[[i]] <- chronopl(trees_topo[[i]], lambda = 5, age.min = 100)
  print(max(branching.times(trees_topo[[i]])))

}

write.tree(trees_topo, file = 'sim_chrono.tre')

set.seed(123456)
pm1 <- rlnorm(38, -6.9, 0.2)

set.seed(654421)
pm2 <- rlnorm(38, -6.9, 0.2)

set.seed(222222)
pm3 <- rlnorm(38, -6.9, 0.2)

set.seed(33333)
pm4 <- rlnorm(38, -6.9, 0.2)

set.seed(666666)
pm5 <- rlnorm(38, -6.9, 0.2)


# important q's: can we recover the clusters?
  	    	 # How far are we from the gene tree

#tree 1. Large wide clustter with slow pacemakers
      tree_temp <- trees_topo[[1]]
      tree_temp$edge.length <- tree_temp$edge.length * pm1 / 2
      for(k in 1:50){
      	    sim_temp_1 <- as.DNAbin(simSeq(tree_temp, l = 1000))
	    write.dna(sim_temp_1, file = paste0('tr_', 1, '_pm_1_', k, '.fasta'), format = 'fasta', nbcol = -1, colsep = '')
      }

      tree_temp <- trees_topo[[1]]
      tree_temp$edge.length <- tree_temp$edge.length * pm2 / 1.5
      for(k in 1:25){
      	    sim_temp_1 <- as.DNAbin(simSeq(tree_temp, l = 1000))
	    write.dna(sim_temp_1, file = paste0('tr_', 1, '_pm_2_', k, '.fasta'), format = 'fasta', nbcol = -1, colsep = '')

      }

      tree_temp <- trees_topo[[1]]
      tree_temp$edge.length <- tree_temp$edge.length * pm3
      for(k in 1:25){
      	    sim_temp_1 <- as.DNAbin(simSeq(tree_temp, l = 1000))
	    write.dna(sim_temp_1, file = paste0('tr_', 1, '_pm_3_', k, '.fasta'), format = 'fasta', nbcol = -1, colsep = '')
	}




 